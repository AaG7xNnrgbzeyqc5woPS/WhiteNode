#!/usr/bin/env bash
# Whitecoin Node
# Written by Oizopower
# GPL V3
########

set -x
set -e

# Source error handling, leave this in place
source /common.sh
install_cleanup_trap

unpack /filesystem/home/pi /home/pi pi
unpack /filesystem/boot /boot
unpack /filesystem/root_init /

apt-get update -y
apt-get upgrade -y

#install needed files
apt-get install -y ntp unzip git build-essential libdb-dev libdb++-dev libboost-all-dev libqrencode-dev miniupnpc libminiupnpc-dev zlib1g-dev pwgen libssl-dev python-pip

# install PHP 7 and NGINX from Stretch Repo
apt-get install -t stretch -y php7.0 php7.0-curl php7.0-gd php7.0-fpm php7.0-cli php7.0-opcache php7.0-mbstring php7.0-xml php7.0-zip php7.0-intl nginx-light

# set correct timezone
pip install -U tzupdate

#update startup scripts
update-rc.d nginx defaults
update-rc.d php7.0-fpm defaults

# Generate RPC first Boot
chmod +x /home/pi/scripts/firstboot
systemctl enable whitenode_first_boot.service

# Startup Whitecoin service
systemctl enable whitecoin.service

#nginx config file
cat > /etc/nginx/sites-enabled/default << "EOF"
# Default server configuration
server {
        listen 80 default_server;
        listen [::]:80 default_server;

        root /var/www/public;

        index index.html index.htm index.php default.html;

        server_name _;

        location / {
                if (-f $request_filename) {
                    break;
                }
                rewrite ^/(.*)$ /index.php?rewriteurl=$1 last;
        }

        # pass the PHP scripts to FastCGI server
        location ~ \.php$ {
                include snippets/fastcgi-php.conf;
                fastcgi_pass unix:/run/php/php7.0-fpm.sock;
        }

         location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
                expires max;
                log_not_found off;
        }

        # deny access to .htaccess files, should an Apache document root conflict with nginx
        location ~ /\.ht {
                deny all;
        }
}

EOF

#create nginx docroot folders and set permissions
mkdir -p /var/www/{public,private,logs,backup,vhosts}
chmod -R 775 /var/www

# prepare interface
cd /var/www/public
git clone https://github.com/Oizopower/WhiteNode-GUI.git .
chown -R www-data:www-data /var/www

#set nginx user
#sed -i 's,^\(user \).*,\1'pi\;',' /etc/nginx/nginx.conf 
#sed -i 's,^\(user \).*,\1'pi',' /etc/php/7.0/fpm/pool.d/www.conf
#sed -i 's,^\(group \).*,\1'pi',' /etc/php/7.0/fpm/pool.d/www.conf

# compile openssl from source
cd /usr/src

if [ "$WHITECOIN_COMPILE_FROM_SOURCE" != "yes" ]
then
	curl --location http://oizopower.nl/openssl-1.0.2k.zip > /usr/src/openssl-1.0.2k.zip
	unzip openssl-1.0.2k.zip
	cd openssl-1.0.2k
else
	wget https://www.openssl.org/source/openssl-1.0.2k.tar.gz
	tar zxvf openssl-1.0.2k.tar.gz
	cd openssl-1.0.2k
	export CFLAGS="-fPIC"
	./config --prefix=/usr --openssldir=/usr/local/openssl shared enable-ec enable-ecdh enable-ecdsa
	make all
fi

make install

# clone whitecoin and compile

cd /usr/local/bin/

if [ "$WHITECOIN_COMPILE_FROM_SOURCE" != "yes" ]
then
	curl --location http://oizopower.nl/whitecoind.zip > /usr/local/bin/whitecoind.zip
	unzip whitecoind.zip
	rm -f whitecoind.zip
else
	git clone https://github.com/Whitecoin-org/whitecoin /opt/whitecoin
	cd /opt/whitecoin/src/ && make -f makefile.unix OPENSSL_INCLUDE_PATH=/usr/src/openssl-1.0.2k/include OPENSSL_LIB_PATH=/usr/src/openssl-1.0.2k/lib USE_UPNP=1
	
	# copy whitecoind to other place
	cp -R -r -p whitecoind /usr/local/bin/
	cd /usr/local/bin/
fi

# strip whitecoind
strip whitecoind

echo "exit 0" >> /etc/rc.local

#unpack /filesystem/root /

# Turnof swap for longer SDCard lifespan
swapoff –all
apt-get remove –purge dphys-swapfile
apt-get autoremove –purge
rm /var/swap

# Remove unused packages
apt-get remove –purge groff-base manpages libraspberrypi-doc ed vim-tiny


# cleanup
rm -rf /opt/whitecoin
rm -rf /usr/src/openssl-1.0.2k
rm -rf /home/oizopower

# cleanup
apt-get clean
apt-get autoremove -y

echo "ALL DONE !!!!";
